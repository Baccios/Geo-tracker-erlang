|%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|
|                                                                      |
| INTERFACES.TXT, the place where module interactions are standardized |
|                                                                      |
|%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|

%------------------------------------------------------------------------------------------
Note: [term()] means that the list is composed of N elements matching term()
%-------------------------------------------------------------------------------------------

% MAP FORMAT

    % Dispatcher ->
    gen_server:call({rm_map_server, rm_id@localhost}, {map, [{UserID, Version}]})  %

    % Replica Manager ->
    {map_reply, [{UserID, Version, State}]}


% CONFIG FORMAT

    % Dispatcher (call or cast) ->
    gen_server:cast({rm_map_server, rm_id@localhost},{config, NewConfig#config{}}) % asynchronous
    gen_server:call({rm_map_server, rm_id@localhost}, {config, NewConfig#config{}}) % synchronous

    % Replica Manager (only in case of call) ->
    ok (if config was correctly updated)
    old_version (if config sent is obsolete)

% UPDATE FORMAT

    % Dispatcher ->
    gen_server:call({rm_map_server, rm_id@localhost}, {update, UserID, NewState, Version, Priority})

    % Replica Manager ->
    {update_reply, NewVersion}

% REGISTRATION FORMAT

    % Replica Manager ->
    gen_server:call({dispatcher, Node}, {registration, node()})

    % Dispatcher ->
    {registration_reply, [rm1@localhost], TTL, AliveTimeout, GossipTimeout, Config#config{}}

% ALIVE FORMAT

    % Replica Manager (periodically) ->
    gen_server:cast({dispatcher, Node}, {alive, node()})